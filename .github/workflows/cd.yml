name: cd

on:
  push:
    branches: [main]

permissions:
  contents: read # key-based auth doesn't need id-token

jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: notely-475312
      REGION: us-central1
      REPO: notely-ar-repo
      IMAGE: notely
      TAG: ${{ github.sha }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # Prefer reading from go.mod; avoids hardcoding possibly invalid versions
          go-version-file: go.mod
          cache: true

      - name: Build the app
        run: |
          chmod +x scripts/buildprod.sh
          bash scripts/buildprod.sh

      # üîê AUTH: use your JSON key stored in repo secret GCP_SA_KEY
      - name: Validate secret
        run: '[ -n "${{ secrets.private_key }}" ] || { echo "Missing private_key"; exit 1; }'

      - name: Authenticate to Google Cloud (JSON key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.private_key }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: |
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}"
          docker build -t "${IMAGE_URI}:${{ env.TAG }}" .
          docker tag "${IMAGE_URI}:${{ env.TAG }}" "${IMAGE_URI}:latest"

      - name: Push image
        run: |
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}"
          docker push "${IMAGE_URI}:${{ env.TAG }}"
          docker push "${IMAGE_URI}:latest"
